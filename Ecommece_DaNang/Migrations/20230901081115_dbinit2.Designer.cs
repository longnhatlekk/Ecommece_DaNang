// <auto-generated />
using System;
using Ecommece_DaNang.Entity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommece_DaNang.Migrations
{
    [DbContext(typeof(AppDbcontext))]
    [Migration("20230901081115_dbinit2")]
    partial class dbinit2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommece_DaNang.Entity.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CardId");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Card", (string)null);
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.CateProduct", b =>
                {
                    b.Property<string>("CateID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CateName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("CateID");

                    b.ToTable("CateProduct", (string)null);

                    b.HasData(
                        new
                        {
                            CateID = "IP",
                            CateName = "Iphone"
                        },
                        new
                        {
                            CateID = "SS",
                            CateName = "Sam Sung"
                        },
                        new
                        {
                            CateID = "PC",
                            CateName = "PoCo"
                        },
                        new
                        {
                            CateID = "LG",
                            CateName = "LG"
                        },
                        new
                        {
                            CateID = "OP",
                            CateName = "Oppo"
                        },
                        new
                        {
                            CateID = "AP",
                            CateName = "Apple Watch"
                        });
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CateId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CateId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CateId = "IP",
                            Description = "• Màn hình: OLED5.8″Super Retina\r\n\r\n• Hệ điều hành: iOS 12\r\n\r\n• Camera sau: 12 MP\r\n\r\n• Camera trước: 7 MP\r\n\r\n• Chip: Apple A11 Bionic\r\n\r\n• RAM: 3 GB\r\n\r\n• Bộ nhớ trong: 64 GB\r\n\r\n• SIM: 1 Nano SIM\r\n\r\n• Pin: 2716 mAh, công nghệ sạc không dây Qi và công nghệ sạc nhanh 15W\r\n\r\n• Chuẩn chống nước và chống bụi IP67",
                            Image = "https://www.google.com.vn/url?sa=i&url=https%3A%2F%2Fhitaothom.com%2Fsan-pham%2Fiphone-x-lock%2F&psig=AOvVaw3UDdvSAkSnhpWbA_ofkpNv&ust=1693639686996000&source=images&cd=vfe&opi=89978449&ved=0CBAQjRxqFwoTCIDbkdHxiIEDFQAAAAAdAAAAABAD",
                            Price = 5000000m,
                            ProductName = "Iphone x",
                            Quantity = 20
                        });
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.Role", b =>
                {
                    b.Property<string>("RoleID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("RoleID");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.Card", b =>
                {
                    b.HasOne("Ecommece_DaNang.Entity.Product", "product")
                        .WithMany("card")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecommece_DaNang.Entity.User", "user")
                        .WithMany("card")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("product");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.Product", b =>
                {
                    b.HasOne("Ecommece_DaNang.Entity.CateProduct", "cateProduct")
                        .WithMany("products")
                        .HasForeignKey("CateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cateProduct");
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.User", b =>
                {
                    b.HasOne("Ecommece_DaNang.Entity.Role", "role")
                        .WithMany("user")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("role");
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.CateProduct", b =>
                {
                    b.Navigation("products");
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.Product", b =>
                {
                    b.Navigation("card");
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.Role", b =>
                {
                    b.Navigation("user");
                });

            modelBuilder.Entity("Ecommece_DaNang.Entity.User", b =>
                {
                    b.Navigation("card");
                });
#pragma warning restore 612, 618
        }
    }
}
